[{"D:\\whatsapp_clone\\whatsapp-clone\\src\\index.js":"1","D:\\whatsapp_clone\\whatsapp-clone\\src\\App.js":"2","D:\\whatsapp_clone\\whatsapp-clone\\src\\components\\Sidebar.js":"3","D:\\whatsapp_clone\\whatsapp-clone\\src\\components\\Sidebarchats.js":"4","D:\\whatsapp_clone\\whatsapp-clone\\src\\components\\Chat.js":"5","D:\\whatsapp_clone\\whatsapp-clone\\src\\components\\LogIn\\Login.js":"6","D:\\whatsapp_clone\\whatsapp-clone\\src\\StateProvider\\Reducer.js":"7","D:\\whatsapp_clone\\whatsapp-clone\\src\\StateProvider\\Stateprovider.js":"8","D:\\whatsapp_clone\\server\\client\\src\\index.js":"9","D:\\whatsapp_clone\\server\\client\\src\\App.js":"10","D:\\whatsapp_clone\\server\\client\\src\\StateProvider\\Reducer.js":"11","D:\\whatsapp_clone\\server\\client\\src\\StateProvider\\Stateprovider.js":"12","D:\\whatsapp_clone\\server\\client\\src\\components\\LogIn\\Login.js":"13","D:\\whatsapp_clone\\server\\client\\src\\components\\Chat.js":"14","D:\\whatsapp_clone\\server\\client\\src\\components\\Sidebar.js":"15","D:\\whatsapp_clone\\server\\client\\src\\components\\Sidebarchats.js":"16","D:\\whatsapp_clone\\server\\client\\src\\services\\getData.js":"17","D:\\whatsapp_clone\\server\\client\\src\\services\\getRoomMessages.js":"18"},{"size":387,"mtime":1611393990960,"results":"19","hashOfConfig":"20"},{"size":868,"mtime":1621664545616,"results":"21","hashOfConfig":"20"},{"size":1468,"mtime":1621665536859,"results":"22","hashOfConfig":"20"},{"size":1370,"mtime":1621665662725,"results":"23","hashOfConfig":"20"},{"size":3631,"mtime":1621665829120,"results":"24","hashOfConfig":"20"},{"size":1146,"mtime":1620744464880,"results":"25","hashOfConfig":"20"},{"size":515,"mtime":1621660780101,"results":"26","hashOfConfig":"20"},{"size":397,"mtime":1611393693453,"results":"27","hashOfConfig":"20"},{"size":387,"mtime":1611393990960,"results":"28","hashOfConfig":"29"},{"size":1290,"mtime":1621750695949,"results":"30","hashOfConfig":"29"},{"size":833,"mtime":1621775870261,"results":"31","hashOfConfig":"29"},{"size":397,"mtime":1611393693453,"results":"32","hashOfConfig":"29"},{"size":7169,"mtime":1621776735279,"results":"33","hashOfConfig":"29"},{"size":4876,"mtime":1621777019503,"results":"34","hashOfConfig":"29"},{"size":1474,"mtime":1621743744696,"results":"35","hashOfConfig":"29"},{"size":1917,"mtime":1621744271514,"results":"36","hashOfConfig":"29"},{"size":478,"mtime":1621741519323,"results":"37","hashOfConfig":"29"},{"size":401,"mtime":1621775445024,"results":"38","hashOfConfig":"29"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"135yz5f",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"2hijae",{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"58"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"D:\\whatsapp_clone\\whatsapp-clone\\src\\index.js",[],["80","81"],"D:\\whatsapp_clone\\whatsapp-clone\\src\\App.js",[],"D:\\whatsapp_clone\\whatsapp-clone\\src\\components\\Sidebar.js",[],"D:\\whatsapp_clone\\whatsapp-clone\\src\\components\\Sidebarchats.js",[],"D:\\whatsapp_clone\\whatsapp-clone\\src\\components\\Chat.js",[],"D:\\whatsapp_clone\\whatsapp-clone\\src\\components\\LogIn\\Login.js",[],"D:\\whatsapp_clone\\whatsapp-clone\\src\\StateProvider\\Reducer.js",[],"D:\\whatsapp_clone\\whatsapp-clone\\src\\StateProvider\\Stateprovider.js",[],"D:\\whatsapp_clone\\server\\client\\src\\index.js",[],["82","83"],"D:\\whatsapp_clone\\server\\client\\src\\App.js",["84"],"import React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport Sidebar from \"./components/Sidebar\";\nimport Chat from \"./components/Chat.js\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport LogIn from \"./components/LogIn/Login.js\";\nimport { useStateValue } from \"./StateProvider/Stateprovider\";\nimport getData from \"./services/getData\";\nfunction App() {\n  const [state, dispatch] = useStateValue();\n\n  const getUserData = async () => {\n    const data = await getData();\n    console.log(data);\n    if (data.status === 200) {\n      dispatch({ type: \"USER_LOGINED\", payload: true });\n      dispatch({ type: \"USER\", payload: data.name });\n      dispatch({ type: \"ADD_ROOM\", payload: data.rooms });\n    }\n  };\n  useEffect(() => {\n    getUserData();\n  }, [state.triger]);\n  return (\n    <div className=\"app\">\n      {!state.isLogin ? (\n        <LogIn />\n      ) : (\n        <div className=\"app_body\">\n          <BrowserRouter>\n            <Switch>\n              <Route exact path=\"/\">\n                <Sidebar />\n              </Route>\n              <Route exact path=\"/:roomId\">\n                <Sidebar />\n                <Chat />\n              </Route>\n            </Switch>\n          </BrowserRouter>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","D:\\whatsapp_clone\\server\\client\\src\\StateProvider\\Reducer.js",[],"D:\\whatsapp_clone\\server\\client\\src\\StateProvider\\Stateprovider.js",[],"D:\\whatsapp_clone\\server\\client\\src\\components\\LogIn\\Login.js",[],"D:\\whatsapp_clone\\server\\client\\src\\components\\Chat.js",["85","86"],"import React, { useEffect, useState, useRef } from \"react\";\r\nimport chatStyle from \"../styles/chat.module.css\";\r\nimport AttachFile from \"@material-ui/icons/AttachFile\";\r\nimport { Avatar, IconButton } from \"@material-ui/core\";\r\nimport MoreVert from \"@material-ui/icons/MoreVert\";\r\nimport SearchOutLined from \"@material-ui/icons/SearchOutlined\";\r\nimport MicIcon from \"@material-ui/icons/MicNoneOutlined\";\r\nimport SentimentVerySatisfiedIcon from \"@material-ui/icons/SentimentVerySatisfied\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useStateValue } from \"../StateProvider/Stateprovider\";\r\nimport getRoomMessages from \"../services/getRoomMessages\";\r\n\r\nexport default function Chat() {\r\n  const [state, dispatch] = useStateValue();\r\n  const [seed, setSeed] = useState(\"\");\r\n  const [input, setInput] = useState(\"\");\r\n  const { roomId } = useParams();\r\n  // const [messages, setMessages] = useState(state.);\r\n  const divRef = useRef(null);\r\n\r\n  const inputHandler = (e) => {\r\n    setInput(e.target.value);\r\n  };\r\n  let currRoom = state.rooms.filter((e) => e._id === roomId);\r\n\r\n  useEffect(() => {\r\n    divRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  }, [state.messages]);\r\n\r\n  useEffect(() => {\r\n    setSeed(Math.floor(Math.random() * 5000));\r\n  }, []);\r\n\r\n  const getMessages = async () => {\r\n    const data = await getRoomMessages(currRoom[0]?.roomName);\r\n    if (data.status === 200) {\r\n      dispatch({ type: \"ROOM_MESSAGES\", payload: data.data });\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getMessages();\r\n  }, [state.messageTriger, roomId]);\r\n\r\n  const sendMessage = async (e) => {\r\n    try {\r\n      e.preventDefault();\r\n\r\n      let hr = new Date().getHours();\r\n      let min = new Date().getMinutes().toLocaleString();\r\n      let curTime = undefined;\r\n      if (hr === 24) {\r\n        curTime = \"00\" + \":\" + min + \" am\";\r\n      } else if (hr >= 12) {\r\n        curTime = (hr % 12) + \":\" + min + \" pm\";\r\n      } else if (hr < 12) {\r\n        curTime = hr + \":\" + min + \" am\";\r\n      }\r\n\r\n      const res = await fetch(\"/api/user/message/create\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          name: state.user,\r\n          message: input,\r\n          time: curTime,\r\n          room: currRoom[0]?.roomName,\r\n        }),\r\n      });\r\n      const data = await res.json();\r\n\r\n      if (data.status === 200) {\r\n        dispatch({ type: \"MESSAGE_TRI\", payload: !state.messageTriger });\r\n\r\n        setInput(\"\");\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  return (\r\n    <div className={chatStyle.chat_container}>\r\n      <div className={chatStyle.chat_header}>\r\n        <Avatar src={`https://avatars.dicebear.com/api/human/${seed}.svg`} />\r\n        <div className={chatStyle.header_info}>\r\n          <h3>{currRoom[0]?.roomName}</h3>\r\n          <p>Last seen at{new Date().toLocaleTimeString()}</p>\r\n        </div>\r\n        <div className={chatStyle.header_right}>\r\n          <IconButton>\r\n            <SearchOutLined />\r\n          </IconButton>\r\n          <IconButton>\r\n            <AttachFile />\r\n          </IconButton>\r\n          <IconButton>\r\n            <MoreVert />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n      <div className={chatStyle.chat_body}>\r\n        {state.messages?.map((message, i) => {\r\n          return (\r\n            <div key={i}>\r\n              <p className={`${chatStyle.message} ${chatStyle.receiver}`}>\r\n                <span\r\n                  style={{\r\n                    fontWeight: \"700\",\r\n                    fontSize: \"13px\",\r\n                    marginBottom: \"5px\",\r\n                  }}\r\n                >\r\n                  {message.name}\r\n                </span>\r\n                {message.message}\r\n                <span\r\n                  style={{\r\n                    opacity: \"0.5\",\r\n                    fontSize: \"small\",\r\n                    fontWeight: \"600\",\r\n                    marginLeft: \"10px\",\r\n                    display: \"flex\",\r\n                    flexDirection: \"row-reverse\",\r\n                  }}\r\n                >\r\n                  {message.time}\r\n                </span>\r\n              </p>\r\n              <div ref={divRef} />\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      <div className={chatStyle.chat_footer}>\r\n        <SentimentVerySatisfiedIcon style={{ color: \"gray\" }} />\r\n        <form>\r\n          <input\r\n            type=\"text\"\r\n            value={input}\r\n            onChange={inputHandler}\r\n            placeholder=\"enter yor message...\"\r\n          />\r\n          <button type=\"submit\" onClick={sendMessage}></button>\r\n        </form>\r\n\r\n        <MicIcon style={{ color: \"gray\" }} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n// className={`${chatStyle.message} ${\r\n// message.name === user.displayName && chatStyle.receiver\r\n// }`}\r\n","D:\\whatsapp_clone\\server\\client\\src\\components\\Sidebar.js",[],"D:\\whatsapp_clone\\server\\client\\src\\components\\Sidebarchats.js",[],["87","88"],"D:\\whatsapp_clone\\server\\client\\src\\services\\getData.js",[],"D:\\whatsapp_clone\\server\\client\\src\\services\\getRoomMessages.js",[],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"89","replacedBy":"93"},{"ruleId":"91","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":23,"column":6,"nodeType":"97","endLine":23,"endColumn":20,"suggestions":"98"},{"ruleId":"95","severity":1,"message":"99","line":42,"column":6,"nodeType":"97","endLine":42,"endColumn":35,"suggestions":"100"},{"ruleId":"101","severity":1,"message":"102","line":52,"column":24,"nodeType":"103","messageId":"104","endLine":52,"endColumn":25},{"ruleId":"89","replacedBy":"105"},{"ruleId":"91","replacedBy":"106"},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],["107"],["108"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUserData'. Either include it or remove the dependency array.","ArrayExpression",["109"],"React Hook useEffect has a missing dependency: 'getMessages'. Either include it or remove the dependency array.",["110"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat",["107"],["108"],"no-global-assign","no-unsafe-negation",{"desc":"111","fix":"112"},{"desc":"113","fix":"114"},"Update the dependencies array to be: [getUserData, state.triger]",{"range":"115","text":"116"},"Update the dependencies array to be: [state.messageTriger, roomId, getMessages]",{"range":"117","text":"118"},[778,792],"[getUserData, state.triger]",[1534,1563],"[state.messageTriger, roomId, getMessages]"]